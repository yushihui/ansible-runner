// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Ansible.proto

package ansible_pb // import "github.com/yushihui/ansible-pb"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JobStatus int32

const (
	JobStatus_Pending JobStatus = 0
	JobStatus_Running JobStatus = 1
	JobStatus_Success JobStatus = 2
	JobStatus_Failed  JobStatus = 3
)

var JobStatus_name = map[int32]string{
	0: "Pending",
	1: "Running",
	2: "Success",
	3: "Failed",
}
var JobStatus_value = map[string]int32{
	"Pending": 0,
	"Running": 1,
	"Success": 2,
	"Failed":  3,
}

func (x JobStatus) String() string {
	return proto.EnumName(JobStatus_name, int32(x))
}
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_Ansible_620c56d3e68a7160, []int{0}
}

type JobPriority int32

const (
	JobPriority_Low    JobPriority = 0
	JobPriority_Normal JobPriority = 1
	JobPriority_High   JobPriority = 2
	JobPriority_Higher JobPriority = 3
	JobPriority_Super  JobPriority = 4
)

var JobPriority_name = map[int32]string{
	0: "Low",
	1: "Normal",
	2: "High",
	3: "Higher",
	4: "Super",
}
var JobPriority_value = map[string]int32{
	"Low":    0,
	"Normal": 1,
	"High":   2,
	"Higher": 3,
	"Super":  4,
}

func (x JobPriority) String() string {
	return proto.EnumName(JobPriority_name, int32(x))
}
func (JobPriority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_Ansible_620c56d3e68a7160, []int{1}
}

type AnsibleJob struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnsibleJob) Reset()         { *m = AnsibleJob{} }
func (m *AnsibleJob) String() string { return proto.CompactTextString(m) }
func (*AnsibleJob) ProtoMessage()    {}
func (*AnsibleJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_Ansible_620c56d3e68a7160, []int{0}
}
func (m *AnsibleJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnsibleJob.Unmarshal(m, b)
}
func (m *AnsibleJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnsibleJob.Marshal(b, m, deterministic)
}
func (dst *AnsibleJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnsibleJob.Merge(dst, src)
}
func (m *AnsibleJob) XXX_Size() int {
	return xxx_messageInfo_AnsibleJob.Size(m)
}
func (m *AnsibleJob) XXX_DiscardUnknown() {
	xxx_messageInfo_AnsibleJob.DiscardUnknown(m)
}

var xxx_messageInfo_AnsibleJob proto.InternalMessageInfo

func (m *AnsibleJob) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AnsibleJob) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AnsibleJobResponse struct {
	Message              string      `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status               JobStatus   `protobuf:"varint,2,opt,name=status,proto3,enum=com.netbrain.rpc.ansible.JobStatus" json:"status,omitempty"`
	JobPriority          JobPriority `protobuf:"varint,3,opt,name=jobPriority,proto3,enum=com.netbrain.rpc.ansible.JobPriority" json:"jobPriority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AnsibleJobResponse) Reset()         { *m = AnsibleJobResponse{} }
func (m *AnsibleJobResponse) String() string { return proto.CompactTextString(m) }
func (*AnsibleJobResponse) ProtoMessage()    {}
func (*AnsibleJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_Ansible_620c56d3e68a7160, []int{1}
}
func (m *AnsibleJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnsibleJobResponse.Unmarshal(m, b)
}
func (m *AnsibleJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnsibleJobResponse.Marshal(b, m, deterministic)
}
func (dst *AnsibleJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnsibleJobResponse.Merge(dst, src)
}
func (m *AnsibleJobResponse) XXX_Size() int {
	return xxx_messageInfo_AnsibleJobResponse.Size(m)
}
func (m *AnsibleJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnsibleJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnsibleJobResponse proto.InternalMessageInfo

func (m *AnsibleJobResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AnsibleJobResponse) GetStatus() JobStatus {
	if m != nil {
		return m.Status
	}
	return JobStatus_Pending
}

func (m *AnsibleJobResponse) GetJobPriority() JobPriority {
	if m != nil {
		return m.JobPriority
	}
	return JobPriority_Low
}

func init() {
	proto.RegisterType((*AnsibleJob)(nil), "com.netbrain.rpc.ansible.AnsibleJob")
	proto.RegisterType((*AnsibleJobResponse)(nil), "com.netbrain.rpc.ansible.AnsibleJobResponse")
	proto.RegisterEnum("com.netbrain.rpc.ansible.JobStatus", JobStatus_name, JobStatus_value)
	proto.RegisterEnum("com.netbrain.rpc.ansible.JobPriority", JobPriority_name, JobPriority_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AnsibleExecutorClient is the client API for AnsibleExecutor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnsibleExecutorClient interface {
	StartAutoMationJob(ctx context.Context, in *AnsibleJob, opts ...grpc.CallOption) (AnsibleExecutor_StartAutoMationJobClient, error)
}

type ansibleExecutorClient struct {
	cc *grpc.ClientConn
}

func NewAnsibleExecutorClient(cc *grpc.ClientConn) AnsibleExecutorClient {
	return &ansibleExecutorClient{cc}
}

func (c *ansibleExecutorClient) StartAutoMationJob(ctx context.Context, in *AnsibleJob, opts ...grpc.CallOption) (AnsibleExecutor_StartAutoMationJobClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AnsibleExecutor_serviceDesc.Streams[0], "/com.netbrain.rpc.ansible.AnsibleExecutor/StartAutoMationJob", opts...)
	if err != nil {
		return nil, err
	}
	x := &ansibleExecutorStartAutoMationJobClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AnsibleExecutor_StartAutoMationJobClient interface {
	Recv() (*AnsibleJobResponse, error)
	grpc.ClientStream
}

type ansibleExecutorStartAutoMationJobClient struct {
	grpc.ClientStream
}

func (x *ansibleExecutorStartAutoMationJobClient) Recv() (*AnsibleJobResponse, error) {
	m := new(AnsibleJobResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AnsibleExecutorServer is the server API for AnsibleExecutor service.
type AnsibleExecutorServer interface {
	StartAutoMationJob(*AnsibleJob, AnsibleExecutor_StartAutoMationJobServer) error
}

func RegisterAnsibleExecutorServer(s *grpc.Server, srv AnsibleExecutorServer) {
	s.RegisterService(&_AnsibleExecutor_serviceDesc, srv)
}

func _AnsibleExecutor_StartAutoMationJob_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AnsibleJob)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AnsibleExecutorServer).StartAutoMationJob(m, &ansibleExecutorStartAutoMationJobServer{stream})
}

type AnsibleExecutor_StartAutoMationJobServer interface {
	Send(*AnsibleJobResponse) error
	grpc.ServerStream
}

type ansibleExecutorStartAutoMationJobServer struct {
	grpc.ServerStream
}

func (x *ansibleExecutorStartAutoMationJobServer) Send(m *AnsibleJobResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _AnsibleExecutor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.netbrain.rpc.ansible.AnsibleExecutor",
	HandlerType: (*AnsibleExecutorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StartAutoMationJob",
			Handler:       _AnsibleExecutor_StartAutoMationJob_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "Ansible.proto",
}

func init() { proto.RegisterFile("Ansible.proto", fileDescriptor_Ansible_620c56d3e68a7160) }

var fileDescriptor_Ansible_620c56d3e68a7160 = []byte{
	// 363 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x6b, 0xe3, 0x30,
	0x10, 0xc5, 0x63, 0x3b, 0x9b, 0x6c, 0x26, 0xbb, 0x59, 0xa3, 0x93, 0xd9, 0xc3, 0xb2, 0x64, 0xb7,
	0x50, 0x42, 0xeb, 0x84, 0xf4, 0x58, 0x28, 0x24, 0xa5, 0x7f, 0x08, 0x6d, 0x31, 0xf6, 0xad, 0x37,
	0xc9, 0x16, 0xb6, 0x8a, 0x2d, 0x19, 0xfd, 0xa1, 0xcd, 0xa9, 0x5f, 0xaa, 0x1f, 0xb0, 0xc8, 0x71,
	0x9a, 0x5c, 0x52, 0x7a, 0x9b, 0x67, 0xbf, 0xdf, 0x93, 0x34, 0x33, 0xf0, 0x73, 0xc1, 0x15, 0x23,
	0x25, 0x0d, 0x6b, 0x29, 0xb4, 0x40, 0x41, 0x2a, 0xaa, 0x90, 0x53, 0x4d, 0x24, 0x66, 0x3c, 0x94,
	0x75, 0x1a, 0xe2, 0xcd, 0xff, 0xf1, 0x0c, 0xa0, 0xb5, 0xae, 0x04, 0x41, 0x23, 0x70, 0x59, 0x16,
	0x38, 0x7f, 0x9d, 0xe3, 0x41, 0xec, 0xb2, 0x0c, 0x21, 0xe8, 0x72, 0x5c, 0xd1, 0xc0, 0x6d, 0xbe,
	0x34, 0xf5, 0xf8, 0xcd, 0x01, 0xb4, 0x43, 0x62, 0xaa, 0x6a, 0xc1, 0x15, 0x45, 0x01, 0xf4, 0x2b,
	0xaa, 0x14, 0xce, 0x69, 0xcb, 0x6f, 0x25, 0x3a, 0x87, 0x9e, 0xd2, 0x58, 0x1b, 0xd5, 0xc4, 0x8c,
	0xe6, 0xff, 0xc2, 0x43, 0xb7, 0x09, 0x57, 0x82, 0x24, 0x8d, 0x35, 0x6e, 0x11, 0x74, 0x03, 0xc3,
	0x27, 0x41, 0x22, 0xc9, 0x84, 0x64, 0x7a, 0x1d, 0x78, 0x4d, 0xc2, 0xd1, 0xa7, 0x09, 0x5b, 0x73,
	0xbc, 0x4f, 0x4e, 0x2e, 0x60, 0xf0, 0x91, 0x8e, 0x86, 0xd0, 0x8f, 0x28, 0xcf, 0x18, 0xcf, 0xfd,
	0x8e, 0x15, 0xb1, 0xe1, 0xdc, 0x0a, 0xc7, 0x8a, 0xc4, 0xa4, 0x29, 0x55, 0xca, 0x77, 0x11, 0x40,
	0xef, 0x1a, 0xb3, 0x92, 0x66, 0xbe, 0x37, 0xb9, 0x84, 0xe1, 0x5e, 0x36, 0xea, 0x83, 0x77, 0x27,
	0x9e, 0xfd, 0x8e, 0xf5, 0x3c, 0x08, 0x59, 0xe1, 0xd2, 0x77, 0xd0, 0x77, 0xe8, 0xde, 0xb2, 0xbc,
	0xd8, 0x90, 0xb6, 0xa2, 0xd2, 0xf7, 0xd0, 0x00, 0xbe, 0x25, 0xa6, 0xa6, 0xd2, 0xef, 0xce, 0x5f,
	0xe1, 0x57, 0xdb, 0xba, 0xab, 0x17, 0x9a, 0x1a, 0x2d, 0x24, 0x2a, 0x01, 0x25, 0x1a, 0x4b, 0xbd,
	0x30, 0x5a, 0xdc, 0x63, 0xcd, 0x04, 0xb7, 0x83, 0xf8, 0x7f, 0xf8, 0x85, 0xbb, 0xde, 0xff, 0x3e,
	0xf9, 0x8a, 0x6b, 0x3b, 0xa1, 0x71, 0x67, 0xe6, 0x2c, 0x57, 0x70, 0x70, 0x15, 0x96, 0x3f, 0x5a,
	0x26, 0xb2, 0x2b, 0x13, 0x39, 0x8f, 0x7f, 0x72, 0xa6, 0x0b, 0x43, 0xec, 0x19, 0xd3, 0xb5, 0x51,
	0x05, 0x2b, 0x0c, 0x9b, 0xb6, 0xe6, 0xd3, 0x9a, 0x90, 0x5e, 0xb3, 0x5b, 0x67, 0xef, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xa8, 0xf6, 0x3b, 0x9d, 0x6c, 0x02, 0x00, 0x00,
}
